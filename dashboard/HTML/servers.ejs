<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title><%= botname %> - Dashboard</title>
    <link rel="shortcut icon" href=<%= botAvatar %> />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/fontawesome.min.css"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap"
      rel="stylesheet"
    />
    <link
      href="//db.onlinewebfonts.com/c/721c73bcd2e49f3a621991089838b503?family=Euclid+Circular+B+Medium"
      rel="stylesheet"
      type="text/css"
    />
    <script src="../JS/jquery-3.6.0.js"></script>
  </head>

  <body>
    <section class="main">
      <!--Main Navigation-->
      <header>
        <!-- Sidebar -->
        <nav id="sidebarMenu" class="collapse d-lg-block sidebar collapse">
          <div class="position-sticky">
            <div class="list-group list-group-flush mx-3 mt-4">
              <a
                href="/"
                class="list-group-item list-group-item-action py-2 ripple"
                style="
                  background: rgba(255, 255, 255, 0.35);
                  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
                  backdrop-filter: blur(9px);
                  -webkit-backdrop-filter: blur(9px);
                  border-radius: 10px;
                  border: 1px solid rgba(255, 255, 255, 0.18);
                "
                aria-current="true"
              >
                <i class="fas fa-home fa-fw me-3"></i
                ><span>Home</span>
              </a>
              <br />
              <a
                href="/dashboard"
                class="list-group-item list-group-item-action py-2 ripple"
                style="
                  background: rgba(255, 255, 255, 0.35);
                  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
                  backdrop-filter: blur(9px);
                  -webkit-backdrop-filter: blur(9px);
                  border-radius: 10px;
                  border: 1px solid rgba(255, 255, 255, 0.18);
                "
                aria-current="true"
              >
                <i class="fas fa-tachometer-alt fa-fw me-3"></i
                ><span>Main Dashboard</span>
              </a>
              <br />
              <a
                href="/dashboard/server"
                class="list-group-item list-group-item-action py-2 ripple"
                style="
                  background: rgba(255, 255, 255, 0.35);
                  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
                  backdrop-filter: blur(9px);
                  -webkit-backdrop-filter: blur(9px);
                  border-radius: 10px;
                  border: 1px solid rgba(255, 255, 255, 0.18);
                "
              >
                <i class="fas fa-server fa-fw me-3"></i
                ><span>Manage Servers</span>
              </a>
              <br />
              <a
                href="/logout"
                class="list-group-item list-group-item-action py-2 ripple"
                style="
                  background: rgba(255, 255, 255, 0.35);
                  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
                  backdrop-filter: blur(9px);
                  -webkit-backdrop-filter: blur(9px);
                  border-radius: 10px;
                  border: 1px solid rgba(255, 255, 255, 0.18);
                "
              >
                <i class="fas fa-sign-out-alt fa-fw me-3"></i
                ><span>Logout</span>
              </a>
            </div>
          </div>
        </nav>
        <!-- Sidebar -->

        <!-- Navbar -->
        <nav
          id="main-navbar"
          class="navbar navbar-expand-lg navbar-light fixed-top"
        >
          <!-- Container wrapper -->
          <div class="container-fluid">
            <!-- Toggle button -->
            <button
              class="navbar-toggler"
              type="button"
              data-mdb-toggle="collapse"
              data-mdb-target="#sidebarMenu"
              aria-controls="sidebarMenu"
              aria-expanded="false"
              aria-label="Toggle navigation"
              onclick="function re(){ let r = $('#sidebarMenu'); if(r.hasClass('collapse'))r.removeClass('collapse');else r.addClass('collapse')}re()"
            >
              <i class="fas fa-bars"></i>
            </button>

            <!-- Brand -->
            <a class="navbar-brand text-white" href="/">
              <img src= "<%= guildicon %>" height="40" alt="" loading="lazy" style="border-radius: 50%; object-fit: cover; background-color: transparent; border: none;"/>
              <%= guildname %>
            </a>
            <div>
              <h1 class="server-name"></h1>
            </div>
          </div>
        </nav>
        <!-- Navbar -->
      </header>
      <!--Main Navigation-->

      <!--Main layout-->
      <main style="margin-top: 58px">
        <div class="container pt-4">
          <h2> Music Settings</h2>
          <!--Section: Manage Server -->
          <section>
            <div class="row">
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 id="songInQueue" class="text-danger"><%= songinqueue %></h3>
                        <p class="mb-0">Songs In Queue</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fa fa-music text-danger fa-3x"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <% if (player && player.playing) { %>
                  <input type="text" id="addsong" placeholder="add songs to the queue" name="add song">
                  <button class="automodbutton" id="addsongbutton">Send</button>
                <% }%>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 class="text-dark" id="songLoop"><%= looptrack %></h3>
                        <p class="mb-0">Song Loop</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fas fa-redo text-dark fa-3x"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <% if (player && player.playing) { %>
                  <button class="automodbutton" id="looptrackbutton"><%= looptrackstatus ? 'Disable': 'Enable' %> Song Loop</button>
                  <script>
                    const button7 = document.getElementById('looptrackbutton');
                    button7.onclick = async function () {
                      const newStatus = '<%= looptrackstatus ? false : true %>';
                      try {
                        const response = await updateLoopTrackStatus('<%= guildId %>', newStatus);
                        if (response.success) {
                          setTimeout(() => {
                            window.location.reload()
                          },1000)
                          
                        } else {
                          console.error('Failed to update status.');
                        }
                      } catch (error) {
                        console.error('An error occurred:', error);
                      }
                    };
                  
                    async function updateLoopTrackStatus(guildId, newStatus) {
                      try {
                        const response = await fetch('/update-looptrack', {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ guildId, newStatus }),
                        });
                  
                        if (!response.ok) {
                          throw new Error('Network response was not ok');
                        }
                  
                        return response.json();
                      } catch (error) {
                        throw new Error('Error updating status');
                      }
                    }
                  </script>
                  <% }%>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 style="color: yellow;" id="queueLoop"><%= loopqueue %></h3>
                        <p class="mb-0">Queue Loop</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fas fa-sync fa-3x" style="color: yellow;"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <% if (player && player.playing) { %>
                  <button class="automodbutton" id="loopqueuebutton"><%= loopqueuestatus ? 'Disable': 'Enable' %> Queue Loop</button>
                  <script>
                    const button6 = document.getElementById('addsongbutton');
                    const song = document.getElementById('addsong');
                    
                    button6.onclick = async function () {
                
                          const songg = song.value.trim(); // Get the trimmed value of the song
                
                        if (songg.length === 0) {
                            alert('Please enter a song name/url to add to the queue');
                            return;
                        }
                
                        try {
                            const response = await updateQueue('<%= guildId %>', songg);
                            if (response.success) {
                              setTimeout(() => {
                                window.location.reload()
                              }, 1000);
                            } else {
                                console.error('Failed to update status.');
                            }
                        } catch (error) {
                            console.error('An error occurred:', error);
                        }
                    };
                
                    async function updateQueue(guildId, songg) {
                        try {
                            const response = await fetch('/update-queue', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ guildId, songg }),
                            });
                
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                
                            return response.json();
                        } catch (error) {
                            throw new Error('Error updating status');
                        }
                    }
                  </script>
                  <script>
                    const button8 = document.getElementById('loopqueuebutton');
                    button8.onclick = async function () {
                      const newStatus = '<%= loopqueuestatus ? false : true %>';
                      try {
                        const response = await updateLoopQueueStatus('<%= guildId %>', newStatus);
                        if (response.success) {
                          setTimeout(() => {
                            window.location.reload()
                          },1000)
                          
                        } else {
                          console.error('Failed to update status.');
                        }
                      } catch (error) {
                        console.error('An error occurred:', error);
                      }
                    };
                  
                    async function updateLoopQueueStatus(guildId, newStatus) {
                      try {
                        const response = await fetch('/update-loopqueue', {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ guildId, newStatus }),
                        });
                  
                        if (!response.ok) {
                          throw new Error('Network response was not ok');
                        }
                  
                        return response.json();
                      } catch (error) {
                        throw new Error('Error updating status');
                      }
                    }
                  </script>
                  <% }%>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 class="text-info" id="prefix"><%= prefix %></h3>
                        <p class="mb-0">Prefix</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fas fa-robot text-info fa-3x"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <input type="text" id="setprefix" placeholder="set prefix:" name="setprefix">
                <button class="automodbutton" id="setprefixbutton">Send</button>
              </div>
            </div>
            <div class="container text-center" id="song-info">
              <h3>Song Info</h3>
              <p>Now Playing: <span id="now-playing"><a href="<%= songcurrenturi %>" target="_blank"><%= songcurrent %></a></span></p>
              <p>Author: <span id="now-playing-author"><%= songauthor %></span></p>
              <br />
              <p>Duration</p>
              <p id="duration"><%= duration %></p>
            </div>
            <div class="row justify-content-center mt-4">
              <h2>Automod Settings</h2>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 class="text-info" id="antiinvite"><%= antiinvite %></h3>
                        <p class="mb-0">Anti Invite</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fa fa-id-card text-info fa-3x"></i>
                      </div>
                    </div>
                  </div>
                </div>
                  <button class="automodbutton" id="antiinvitestatus"><%= antiinviteStatus? 'Disable':'Enable' %> Anti Invite</button>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 class="text-dark" id="antighost"><%= antighost %></h3>
                        <p class="mb-0">Anti GhostPing</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fas fa-ghost text-dark fa-3x"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <button class="automodbutton" id="antighoststatus"><%= antighostStatus? 'Disable':'Enable' %> Anti GhostPing</button>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 style='color:#342056' id="antiping"><%= antiping %></h3>
                        <p class="mb-0">Anti Ping</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fa fa-at fa-3x" style='color:#342056'></i>
                      </div>
                    </div>
                  </div>
                </div>
                <button class="automodbutton" id="antipingstatus"><%= antipingStatus? 'Disable':'Enable' %> Anti Ping</button>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 style="color:#d68438" id="antiscam"><%= antiscam %></h3>
                        <p class="mb-0">Anti Scam</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fa fa-bug fa-3x" style="color:#d68438"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <button class="automodbutton" id="antiscamstatus"><%= antiscamStatus? 'Disable':'Enable' %> Anti Scam</button>
              </div>
              <div class="col-xl-3 col-sm-6 col-12 mb-4">
                <div class="card">
                  <div class="card-body">
                    <div class="d-flex justify-content-between px-md-1">
                      <div>
                        <h3 style="color:#921332" id="antiscam"><%= antilink %></h3>
                        <p class="mb-0">Anti Link</p>
                      </div>
                      <div class="align-self-center">
                        <i class="fa fa-bug fa-3x" style="color:#921332"></i>
                      </div>
                    </div>
                  </div>
                </div>
                <button class="automodbutton" id="antilinkstatus"><%= antilinkStatus? 'Disable':'Enable' %> Anti link</button>
              </div>
            </div>

          </section>
          <!-- Footer -->
          <footer class="footer bg-base">
            <p>
              &copy; <span id="cp-year"></span> Copyright <%= owner %>. All Rights
              Reserved.
            </p>
    
            <p style="letter-spacing: 0.1em;" class="is-uppercase">
              Website Designed By
              <a
                href= <%= serverInvite %>
                class="blurple has-text-weight-bold"
                target="_blank"
                >C4•Team™</a>
            </p>
          </div>
        </div>
          <!-- End Footer -->
        </div>
      </main>
      <!--Main layout-->
    </section>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
      crossorigin="anonymous"
    ></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
  </body>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  <script src="https://unpkg.com/@popperjs/core@2"></script>
  <script src="https://unpkg.com/tippy.js@6"></script>
  <script src="../JS/script.js"></script>
  <link rel="preload" href="../CSS/dashboard.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="../CSS/dashboard.css"></noscript>
  <script>
    const button = document.getElementById('antiinvitestatus');
    button.onclick = async function () {
      const newStatus = '<%= antiinviteStatus ? false : true %>';
      try {
        const response = await updateAntiInviteStatus('<%= guildId %>', newStatus);
        if (response.success) {
          setTimeout(() => {
            window.location.reload()
          },1000)
          
        } else {
          console.error('Failed to update status.');
        }
      } catch (error) {
        console.error('An error occurred:', error);
      }
    };
  
    async function updateAntiInviteStatus(guildId, newStatus) {
      try {
        const response = await fetch('/update-antiinvite', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ guildId, newStatus }),
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        return response.json();
      } catch (error) {
        throw new Error('Error updating status');
      }
    }
  </script>
  <script>
    const button1 = document.getElementById('antighoststatus');
    button1.onclick = async function () {
      const newStatus = '<%= antighostStatus ? false : true %>';
      try {
        const response = await updateAntiGhostStatus('<%= guildId %>', newStatus);
        if (response.success) {
          setTimeout(() => {
            window.location.reload()
          },1000)
          
        } else {
          console.error('Failed to update status.');
        }
      } catch (error) {
        console.error('An error occurred:', error);
      }
    };
  
    async function updateAntiGhostStatus(guildId, newStatus) {
      try {
        const response = await fetch('/update-antighost', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ guildId, newStatus }),
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        return response.json();
      } catch (error) {
        throw new Error('Error updating status');
      }
    }
  </script>
  <script>
    const button2 = document.getElementById('antipingstatus');
    button2.onclick = async function () {
      const newStatus = '<%= antipingStatus ? false : true %>';
      try {
        const response = await updateAntiPingStatus('<%= guildId %>', newStatus);
        if (response.success) {
          setTimeout(() => {
            window.location.reload()
          },1000)
          
        } else {
          console.error('Failed to update status.');
        }
      } catch (error) {
        console.error('An error occurred:', error);
      }
    };
  
    async function updateAntiPingStatus(guildId, newStatus) {
      try {
        const response = await fetch('/update-antiping', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ guildId, newStatus }),
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        return response.json();
      } catch (error) {
        throw new Error('Error updating status');
      }
    }
  </script>
  <script>
    const button3 = document.getElementById('antiscamstatus');
    button3.onclick = async function () {
      const newStatus = '<%= antiscamStatus ? false : true %>';
      try {
        const response = await updateAntiScamStatus('<%= guildId %>', newStatus);
        if (response.success) {
          setTimeout(() => {
            window.location.reload()
          },1000)
          
        } else {
          console.error('Failed to update status.');
        }
      } catch (error) {
        console.error('An error occurred:', error);
      }
    };
  
    async function updateAntiScamStatus(guildId, newStatus) {
      try {
        const response = await fetch('/update-antiscam', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ guildId, newStatus }),
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        return response.json();
      } catch (error) {
        throw new Error('Error updating status');
      }
    }
  </script>
  <script>
    const button4 = document.getElementById('antilinkstatus');
    button4.onclick = async function () {
      const newStatus = '<%= antilinkStatus ? false : true %>';
      try {
        const response = await updateAntilinkStatus('<%= guildId %>', newStatus);
        if (response.success) {
          setTimeout(() => {
            window.location.reload()
          },1000)
          
        } else {
          console.error('Failed to update status.');
        }
      } catch (error) {
        console.error('An error occurred:', error);
      }
    };
  
    async function updateAntilinkStatus(guildId, newStatus) {
      try {
        const response = await fetch('/update-antilink', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ guildId, newStatus }),
        });
  
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
  
        return response.json();
      } catch (error) {
        throw new Error('Error updating status');
      }
    }
  </script>
  <script>
    const button5 = document.getElementById('setprefixbutton');
    const prefix = document.getElementById('setprefix');
    
    button5.onclick = async function () {
        const newPrefix = prefix.value.trim(); // Get the trimmed value of the prefix

        if (newPrefix.length === 0 || newPrefix.length > 5) {
            alert('Please enter a prefix, not more than 5 characters.');
            return;
        }

        try {
            const response = await updatePrefix('<%= guildId %>', newPrefix); // Use newPrefix here
            if (response.success) {
                setTimeout(() => {
                    window.location.reload()
                }, 1000);
            } else {
                console.error('Failed to update status.');
            }
        } catch (error) {
            console.error('An error occurred:', error);
        }
    };

    async function updatePrefix(guildId, newPrefix) {
        try {
            const response = await fetch('/update-prefix', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ guildId, newPrefix }), // Use newPrefix here
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            return response.json();
        } catch (error) {
            throw new Error('Error updating status');
        }
    }
  </script>
  <!-- <script>
    function checkTrackStart() {
        fetch('/track-start', { method: 'POST' })
            .then(response => {
                if (response.ok) {
                    // A track has started, refresh the page
                    window.location.reload();
                }
            })
            .catch(error => {
                console.error('Error checking track start:', error);
            });
    }

    // Check for track start every 5 seconds
    setTimeout(checkTrackStart, 5000);
</script> -->
<script>
  const urlParams = new URLSearchParams(window.location.search);
  const currentGuildId = urlParams.get('id');

  function checkTrackStart() {
      fetch(`/track-start?guildId=${currentGuildId}`, { method: 'POST' })
          .then(response => {
              if (response.ok) {
                  // A track has started for the current guild, refresh the page
                  window.location.reload();
              }
          })
          .catch(error => {
              console.error('Error checking track start:', error);
          });
  }

  // Check for track start every 5 seconds
  setTimeout(checkTrackStart, 1000);
</script>
<script>
  function checkTrackEnd() {
      fetch(`/track-end?guildId=${currentGuildId}`, { method: 'POST' })
          .then(response => {
              if (response.ok) {
                // setTimeout(() => {
                  window.location.reload(); 
                // }, 1000)
              }
          })
          .catch(error => {
              console.error('Error checking track end:', error);
          });
  }
  setTimeout(checkTrackEnd, 1000);
</script>
</html>
